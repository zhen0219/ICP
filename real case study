3.To debug the 'calico-node-xxx' pod issue, I saw you have installed kubectl, then you can run below commands to get 'calico-node' Pod information and the logs.

(1) kubectl -s 127.0.0.1:8888 get pods -n kube-system | grep calico-node
(2) kubectl -s 127.0.0.1:8888 -n kube-system logs <calico-node-pod-name> -c calico-node
(3) kubectl -s 127.0.0.1:8888 -n kube-system describe pod <calico-node-pod-name

1) delete the router pods, and let kube-system restarte a new one.
 kubectl delete pods <pod-name> -n kube-system -s 127.0.0.1:8888

2) check it again by the command 
kubectl get pods -n kube-system -s 127.0.0.1:8888 

I had to enable DNS on my router
to resolve DHCP ids. Without it, the install was failing. My assumption is
that the installer is using something like 'nslookup' or 'host' command but
neither of these commands look into the /etc/hosts file, they query the DNS
servers.

problem solved by:
1. uninstall
2. add proxy_address_ip
3. add calico_ipip_enabled is set to true
4. re install


2. After successful deployment URL is not opening.
1) on the master host, run "docker ps > /tmp/support.txt"    // this is to see whether all containers running well
2) echo "======================================" >> /tmp/support.txt;
3) run "docker images >> /tmp/support.txt"  //this is to see  whether the original images are well.
4) echo "======================================" >> /tmp/support.txt;
5) and then run " journalctl -u kubelet >> /tmp/support.txt  // checking upon the status of kubelet
6) echo "======================================" >> /tmp/support.txt;
7)run cli "kubectl  -s 127.0.0.1:8888 get pods -n kube-system" >> /tmp/support.txt   //check the health of kube-system
8) collecting some basic version info, if we need to reproduce the case in our lab.
    cat /etc/*release* >> /tmp/support.txt;
    docker --version >>  /tmp/support.txt;
    
    
 1. Output of docker logs:
    1.1. docker logs k8s_etcd_k8s-etcd-10.0.0.160_kube-system_66432c21fd31d754358fad9a3154379a_0 2>&1
    1.2. docker logs k8s_apiserver_k8s-master-10.0.0.160_kube-system_28b94386aaf8c58cfcace7d63e526e0b_3 2>&1
    1.3. docker logs k8s_apiserver_k8s-master-10.0.0.160_kube-system_28b94386aaf8c58cfcace7d63e526e0b_4 2>&10
 
    kubelet log:
    - journalctl -u kubelet
                   >>nmap -p 8001 localhost
                   
    - The installation is now successfully completed and the cluster is up and running.
    - To achieve the above, the following changes were made:
      - iptables was enabled on master host
      - network_cidr was changed to its default value.
      - a complete uninstall was performed
      - left-over images were all cleaned-up on the hosts.
      - Installation was performed in a fresh directory.
